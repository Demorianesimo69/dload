# 这是一个样品 menu.lst 文件。你应该对它做些改动。
# 它必须是 UTF-8 编码，以支持多种语言。
# 字体应该是 unifont.hex 格式。



#设置倒计时(秒)
timeout 30

#设置第一项为默认值
default 1

#设置字符颜色(高32位是背景色，低32位是前景色。在命令行执行：echo -rrggbb，可查看对应的颜色。)
#color normal=0xff9933 highlight=0xffff00 helptext=0xff00ff heading=0x66ff00

#设置图形模式(可使用 graphicsmode 探测系统支持的图形模式)
#graphicsmode -1 800(水平像素)

#加载背景图
#splashimage /efi/grub/splashimage.jpg || splashimage /boot/grub/splashimage.bmp
#加载unifont字体(如果不是 16*16 字体，需增加参数，如 --font-high=24)
#font /efi/grub/unifont.hex.gz

#获取水平像素，加载不同尺寸的字体及背景图
#calc *0x834c > nul ;; set a=%@retval%
#if %a%>=801 && font --font-high=40 /efi/grub/menu40.hex 
#if %a%<=800 && font /efi/grub/unifont.hex.gz && splashimage /efi/grub/lt.jpg

#判断启动环境：calc *0x8277 > nul ;; set 启动环境=%@retval%     启动环境：0/32/64=bios/uefi_x86/uefi_x64

#设置菜单框
#setmenu --box x=4 w=60 y=6 h=9 l=2
#设置中文菜单按键帮助
#setmenu --lang=zh
#设置自动菜单编号
#setmenu --auto-num-on 
#设置字符串信息
#setmenu --string=x=y=颜色="字符串"
#设置日期时间
#setmenu --string=x=y=颜色="date&time=yyyy-MM-dd  HH:mm:ss"
#设置倒计时
#setmenu --timeout=x=y=颜色
#更多菜单编辑功能、动画、图像菜单等等，可参考http://bbs.wuyou.net/forum.php?mod=viewthread&tid=369720&extra=page%3D3

title 启动 efi 文件
chainloader /efi/boot/grub2x64.efi

title 启动 windows
chainloader /efi/microsoft/boot/bootmgfw.efi

title 启动虚拟光盘
find --set-root /cdrom.iso
map /cdrom.iso (0xff)
chainloader (0xff)

title 启动虚拟光盘(加载到内存)
find --set-root /cdrom.iso
map --mem /cdrom.iso (0xff)
chainloader (0xff)

title 启动存在的光盘(cd0)
chainloader (cd0)

title 启动虚拟硬盘
find --set-root /boot/hdd.img
map /boot/hdd.img (hd)
chainloader (hd-1)

title 启动虚拟硬盘(加载到内存)
find --set-root /boot/hdd.img
map --mem /boot/hdd.img (hd)
chainloader (hd-1)

title 启动存在的硬盘(hd0)
chainloader (hd0)

title 启动其他菜单
configfile /efi/grub/menu2.lst

title 启动 Linux Porteus 5.0 x86_64 openbox
kernel /porteus/vmlinuz copy2ram
initrd /porteus/initrd.xz

#假设外部命令位于 /efi/grub/ext/
#假设 WIM/VHD(或者启动文件夹) 位于 (hdx,y)/boot/imgs/
#假设 windows 的 winload.efi 位于 (hdx,y)

title 使用外部命令 ntloader 启动 WIM/VHD (kernel方案1)
uuid (hdx,y)
kernel /efi/grub/ext/ntloader uuid=%?% file=/boot/imgs/winpe.wim
initrd /efi/grub/ext/initrd.lz1

title 使用外部命令 ntloader 启动 WIM/VHD (kernel 方案2)
find --set-root /boot/imgs/winpe.wim
uuid ()
find --set-root /efi/grub/ext/ntloader
kernel /efi/grub/ext/ntloader uuid=%?% file=/boot/imgs/winpe.wim
initrd /efi/grub/ext/initrd.lz1

title 使用外部命令 ntloader 启动 WIM/VHD (chainloader 方案1)
uuid (hdx,y)
chainloader /efi/grub/ext/ntloader initrd=/efi/grub/ext/initrd.lz1 uuid=%?% file=/boot/imgs/winpe.wim

title 使用外部命令 ntloader 启动 WIM/VHD (chainloader 方案2)
find --set-root /boot/imgs/winpe.wim
uuid ()
find --set-root /efi/grub/ext/ntloader
chainloader /efi/grub/ext/ntloader initrd=/efi/grub/ext/initrd.lz1 uuid=%?% file=/boot/imgs/winpe.wim

title 使用外部命令 ntloader 启动 Windows 系统 (kernel 方案)
uuid (hdx,y)
kernel /efi/grub/ext/ntloader uuid=%?%
initrd /efi/grub/ext/initrd.lz1

title 使用外部命令 ntloader 启动 Windows 系统 (chainloader 方案)
uuid (hdx,y)
chainloader /efi/grub/ext/ntloader initrd=/efi/grub/ext/initrd.lz1 uuid=%?%

title 使用外部命令 NTBOOT 启动 WIM/VHD (方案1)
map --mem --no-hook /efi/grub/ext/NTBOOT (hd)
(hd-1,0)/loaderNT (hdx,y)/boot/imgs/winpe.wim
boot

title 使用外部命令 NTBOOT 启动 WIM/VHD (方案2)
find --set-root /efi/grub/ext/NTBOOT
map --mem --no-hook /efi/grub/ext/NTBOOT (hd)
find --set-root /boot/imgs/winpe.wim
(hd-1,0)/loaderNT /boot/imgs/winpe.wim
boot

title 使用外部命令 NTBOOT 启动 Windows 系统
map --mem --no-hook /efi/grub/ext/NTBOO (hd)
(hd-1,0)/loaderNT (hdx,y)/.win
boot

title 命令行
commandline

title 退出grub4dos
exit_g4d

title 重启
reboot

title 关机
halt





